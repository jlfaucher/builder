This file is a subset of build-oorexx.txt, limited to the build of executor.


Prerequisite:
    Your compiler supports C++17 under MacOs and C++20 under Windows.
    Needed for ICU4X which is now included in the sources of Executor.

    Tested with clang+llvm-15.0.3-x86_64-apple-darwin
    Tested with Microsoft Visual Studio Community 2022 (64-bit) - Version 17.3.6


--------------------------------------------------------------------------------
# MacOs
--------------------------------------------------------------------------------

cd <my directory>
mkdir rexx
cd rexx

# Get the sources
git clone https://github.com/jlfaucher/builder.git
mkdir oorexx
cd oorexx
git clone https://github.com/jlfaucher/executor.git

# Initialize the build environment:
# build/<target[.branch]>/d1/d2/.../system-arch/compiler/config
. ../builder/scripts/setenv build/executor.master/sandbox/jlf/trunk/macos-x86_64/clang/release

# Several aliases are defined to navigate easily in the directories:
alias

# Configure
cdbuild
cmake -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE -DCMAKE_INSTALL_PREFIX=$builder_delivery_dir $builder_src_dir

# The binaries are installed in $builder_delivery_dir
make install

# Optional: get the regex package (loaded by ooRexxShell if available)
cdoorexx
svn checkout svn://svn.code.sf.net/p/oorexx/code-0/incubator/regex official/incubator/regex
cdincubator
ln -s ../../official/incubator/regex regex

# Try oorexxshell, see the demos:
# https://jlfaucher.github.io/executor.master/demos/index.html
cdoorexx
oorexxshell

# Next time, when starting from a fresh console:
cd <my directory>/rexx/oorexx
. ../builder/scripts/setenv build/executor.master/sandbox/jlf/trunk/macos-x86_64/clang/release


--------------------------------------------------------------------------------
# Ubuntu
--------------------------------------------------------------------------------

cd <my directory>
mkdir rexx
cd rexx

# Get the sources
git clone https://github.com/jlfaucher/builder.git
mkdir oorexx
cd oorexx
git clone https://github.com/jlfaucher/executor.git

# Initialize the build environment:
# build/<target[.branch]>/d1/d2/.../system-arch/compiler/config
. ../builder/scripts/setenv build/executor.master/sandbox/jlf/trunk/ubuntu-x86_64/gcc/release

# Several aliases are defined to navigate easily in the directories:
alias

# Configure
cdbuild
cmake -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE -DCMAKE_INSTALL_PREFIX=$builder_delivery_dir $builder_src_dir

# The binaries are installed in $builder_delivery_dir
make install

# Optional: get the regex package (loaded by ooRexxShell if available)
cdoorexx
svn checkout svn://svn.code.sf.net/p/oorexx/code-0/incubator/regex official/incubator/regex
cdincubator
ln -s ../../official/incubator/regex regex

# Try oorexxshell, see the demos:
# https://jlfaucher.github.io/executor.master/demos/index.html
cdoorexx
oorexxshell

# Next time, when starting from a fresh console:
cd <my directory>/rexx/oorexx
. ../builder/scripts/setenv build/executor.master/sandbox/jlf/trunk/ubuntu-x86_64/gcc/release


--------------------------------------------------------------------------------
# Windows
--------------------------------------------------------------------------------
# Prerequisite
# - No space in the path to the current directory.
# - Visual Studio 2022 or 2019 or 2017 or 2015 or 2013 or 2012 is installed. See scripts\setenv-cl.bat
# - (needed?) An SDK is installed: https://developer.microsoft.com/en-us/windows/downloads/sdk-archive


cd <my directory>
mkdir rexx
cd rexx

:: Get the sources
git clone https://github.com/jlfaucher/builder.git
mkdir oorexx
cd oorexx
git clone https://github.com/jlfaucher/executor.git

:: Several macros are defined to navigate easily in the directories:
doskey /macros

:: Initialize the build environment:
:: build/<target[.branch]>/d1/d2/.../system-arch/compiler/config
call ..\builder\scripts\setenv build\executor.master\sandbox\jlf\trunk\windows-x86_64\cl\release

:: Configure
cdbuild
cmake -G "NMake Makefiles" -DCMAKE_BUILD_TYPE=%CMAKE_BUILD_TYPE% -DCMAKE_INSTALL_PREFIX=%builder_delivery_dir% %builder_src_dir%
nmake install

:: Optional: if you want colors in ooRexxShell, install rexx-gci:
cd <my directory>
cd rexx
git clone https://github.com/jlfaucher/rexx-gci.git
:: and add <my directory>/rexx/rexx-gci/build/windows-x86_64/cl/release to your PATH

:: Optional: get the regex package (loaded by ooRexxShell if available)
cdoorexx
svn checkout svn://svn.code.sf.net/p/oorexx/code-0/incubator/regex official/incubator/regex
cdincubator
mklink /d regex ..\..\official\incubator\regex

:: Try oorexxshell, see the demos:
:: https://jlfaucher.github.io/executor.master/demos/index.html
cdoorexx
oorexxshell

:: Next time, when starting from a fresh console:
cd <my directory>/rexx/oorexx
call ..\builder\scripts\setenv build\executor.master\sandbox\jlf\trunk\windows-x86_64\cl\release
