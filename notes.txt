--------------------------------------------------------------------------------
Details of the commands executed by make
--------------------------------------------------------------------------------

make VERBOSE=1 install

Remember: did not find how to select the right directory for build.
So I hardcoded this command in the Visual Studio solution of type nmake:
    e:
    cd E:\Local\rexxlocal\oorexx\build\executor.master\sandbox\jlf\trunk\windows-x86_64\cl\debug\build
    nmake VERBOSE=1 install


How to display the response files
https://stackoverflow.com/questions/57358039/how-to-see-the-underlying-compiler-linker-command-line-with-cmake-nmake
nmake has an option to display inline files / response files:
    /U Dump inline files
For recursive make you might want to set this in an environment variable like this:
    set MAKEFLAGS=U
This way, the content of all response files will appear on the console.
---
From cmd:
set MAKEFLAGS=U
devenv /useenv
nmake VERBOSE=1 install


--------------------------------------------------------------------------------
Creating a distribution
--------------------------------------------------------------------------------

From P.O.:
svn update
pkill rxapi
dnf -y -v remove ooRexx
rm -dfr ~/workspace/oorexx-centos8-build/oorexxbuild/
cmake -DBUILD_RPM=1 -DOS_DIST=centos8 -DCMAKE_BUILD_TYPE=RELEASE ../oorexxSVN
make clean
make
cpack ./
dnf -y -v install ~/workspace/oorexx-centos8-build/oorexxbuild/.rpm


--------------------------------------------------------------------------------
Creating a dmg for M1 Mac
--------------------------------------------------------------------------------

From P.O.:
On Jenkins we build everything starting from ~workspace, here are the steps for M1 Mac

# make ooRexx

# Stop and delete existing installation, leave no witnesses
pkill rxapi || true
rm -dfr ~/Applications/ooRexx5

# Clean the build dir to be sure everything is built fresh
rm -dfr oorexxBuild/*

mkdir -p oorexxBuild
cd oorexxBuild

# Installing to ~/Applications
/opt/homebrew/bin/cmake -G "Unix Makefiles" -DBUILD_OSX_UNIVERSAL_BINARIES=1 -DBUILD_DMG=1 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=~/Applications/ooRexx5 ../oorexxSVN

make clean              # make sure rexx picks up the current build date
make

# install to ~/Applications/ooRexx5 (the installer build uses this so do not change)
make install

# now build the installer with a script generated by CMake
bash ./build_macOS_dmg.sh

The last step in the build chain generates a dmg drag&drop installer that can be used elsewhere.


--------------------------------------------------------------------------------
Technical infos
--------------------------------------------------------------------------------

MacOs File sharing (System preferences/sharing/File sharing)
The name jlfaucher.local is defined in this screen.
Can be modified (button Edit under the field Computer name)


MacOs NFS share
---------------
MacOs /etc/exports
/local              -mapall=502          where 502 is the uid displayed by the command id.
/Users/jlfaucher    -mapall=502

Ubuntu fstab:
jlfaucher.local:/local	            /host/local	nfs	defaults	0	0
jlfaucher.local:/Users/jlfaucher    /host/local nfs defaults    0   0

MacOs SMB share
---------------
MacOs : menu System Preferences, then Sharing
Options : activate SMB, deactivate AFP
Activate file sharing and add /Local1 to the list

Windows SMB client
------------------
(replace Y: by your letter drive)
(replace Z: by your letter drive)

net use
 Y:        \\jlfaucher.local\Local1         Microsoft Windows Network
 Z:        \\vmware-host\Shared Folders     VMware Shared Folders

Must mount Local1 (exported by MacOs - System preferences/sharing/File sharing)
which contains this symbolic link to have
the directory 'Local' under Y:
/Local
/Local1
    Local@ -> /Local

http://superuser.com/questions/555715/mac-os-x-10-8-configure-smbd-to-follow-symbolic-links
Adding no-symlinks as a program argument in smbd's launchdaemon plist did the trick.
The file sharing services do need a restart after changing the file.
/System/Library/LaunchDaemons/com.apple.smbd.plist
<array>
        <string>/usr/sbin/smbd</string>
        <string>-no-symlinks</string>
</array>
[No longer works after upgrade to El-Capitan]
This change has been overwritten when upgrading to El-Capitan.
No longer possible to edit the file smbd.plist because of System Integrity Protection.
I follow a procedure described in https://forums.developer.apple.com/thread/17944:
sudo defaults write /Library/Preferences/com.apple.smbd.plist ProgramArguments -array-add -no-symlinks
Does not work...
Fallback:
sudo cp /System/Library/LaunchDaemons/com.apple.smbd.plist /Library/LaunchDaemons/jlf.smbd.plist
sudo chown root /Library/LaunchDaemons/jlf.smbd.plist
edit jlf.smbd.plist:
- re-apply the change described above
- change the label com.apple.smbd to jlf.smbd (2 occurences)
to do the first time, and to redo after each reboot:
sudo launchctl unload /System/Library/LaunchDaemons/com.apple.smbd.plist
sudo launchctl unload /Library/LaunchDaemons/jlf.smbd.plist
sudo launchctl load -w /Library/LaunchDaemons/jlf.smbd.plist


--------------------------------------------------------------------------------
Old build system: autoconf - automake
--------------------------------------------------------------------------------

https://stackoverflow.com/questions/2531827/what-are-makefile-am-and-makefile-in

DEVELOPER runs these:

1) autoconf - creates shippable configure script (which the installer will run to make the Makefile)
    configure.in -> autoconf -> configure (script) <---- Note! configure.in is depreciated.
    configure.ac -> autoconf -> configure (script) <---- Now use configure.ac / (*.ac = autoconf)
2) automake - creates shippable Makefile.in (which configure will later read to make the Makefile)
    Makefile.am -> automake -> Makefile.in / (*.am = automake)

INSTALLER runs these:

1) ./configure - creates the Makefile (from Makefile.in).
    Makefile.in -> configure -> Makefile (*.in = input file)
2) make - creates the application (from the Makefile just created).
3) sudo make install - installs the application

--------------------------------------------------------------------------------
Architectures
--------------------------------------------------------------------------------

llc --version
LLVM (http://llvm.org/):
  LLVM version 15.0.6
  Optimized build.
  Default target: arm64-apple-darwin21.6.0
  Host CPU: apple-m1

  Registered Targets:
    aarch64    - AArch64 (little endian)
    aarch64_32 - AArch64 (little endian ILP32)
    aarch64_be - AArch64 (big endian)
    amdgcn     - AMD GCN GPUs
    arm        - ARM
    arm64      - ARM64 (little endian)
    arm64_32   - ARM64 (little endian ILP32)
    armeb      - ARM (big endian)
    avr        - Atmel AVR Microcontroller
    bpf        - BPF (host endian)
    bpfeb      - BPF (big endian)
    bpfel      - BPF (little endian)
    hexagon    - Hexagon
    lanai      - Lanai
    mips       - MIPS (32-bit big endian)
    mips64     - MIPS (64-bit big endian)
    mips64el   - MIPS (64-bit little endian)
    mipsel     - MIPS (32-bit little endian)
    msp430     - MSP430 [experimental]
    nvptx      - NVIDIA PTX 32-bit
    nvptx64    - NVIDIA PTX 64-bit
    ppc32      - PowerPC 32
    ppc32le    - PowerPC 32 LE
    ppc64      - PowerPC 64
    ppc64le    - PowerPC 64 LE
    r600       - AMD GPUs HD2XXX-HD6XXX
    riscv32    - 32-bit RISC-V
    riscv64    - 64-bit RISC-V
    sparc      - Sparc
    sparcel    - Sparc LE
    sparcv9    - Sparc V9
    systemz    - SystemZ
    thumb      - Thumb
    thumbeb    - Thumb (big endian)
    ve         - VE
    wasm32     - WebAssembly 32-bit
    wasm64     - WebAssembly 64-bit
    x86        - 32-bit X86: Pentium-Pro and above
    x86-64     - 64-bit X86: EM64T and AMD64
    xcore      - XCore


rustc --print target-list
    aarch64-apple-darwin
    aarch64-apple-ios
    aarch64-apple-ios-macabi
    aarch64-apple-ios-sim
    aarch64-apple-tvos
    aarch64-apple-watchos-sim
    aarch64-fuchsia
    aarch64-kmc-solid_asp3
    aarch64-linux-android
    aarch64-nintendo-switch-freestanding
    aarch64-pc-windows-gnullvm
    aarch64-pc-windows-msvc
    aarch64-unknown-freebsd
    aarch64-unknown-hermit
    aarch64-unknown-linux-gnu
    aarch64-unknown-linux-gnu_ilp32
    aarch64-unknown-linux-musl
    aarch64-unknown-netbsd
    aarch64-unknown-none
    aarch64-unknown-none-softfloat
    aarch64-unknown-openbsd
    aarch64-unknown-redox
    aarch64-unknown-uefi
    aarch64-uwp-windows-msvc
    aarch64-wrs-vxworks
    aarch64_be-unknown-linux-gnu
    aarch64_be-unknown-linux-gnu_ilp32
    arm-linux-androideabi
    arm-unknown-linux-gnueabi
    arm-unknown-linux-gnueabihf
    arm-unknown-linux-musleabi
    arm-unknown-linux-musleabihf
    arm64_32-apple-watchos
    armeb-unknown-linux-gnueabi
    armebv7r-none-eabi
    armebv7r-none-eabihf
    armv4t-none-eabi
    armv4t-unknown-linux-gnueabi
    armv5te-none-eabi
    armv5te-unknown-linux-gnueabi
    armv5te-unknown-linux-musleabi
    armv5te-unknown-linux-uclibceabi
    armv6-unknown-freebsd
    armv6-unknown-netbsd-eabihf
    armv6k-nintendo-3ds
    armv7-apple-ios
    armv7-linux-androideabi
    armv7-unknown-freebsd
    armv7-unknown-linux-gnueabi
    armv7-unknown-linux-gnueabihf
    armv7-unknown-linux-musleabi
    armv7-unknown-linux-musleabihf
    armv7-unknown-linux-uclibceabi
    armv7-unknown-linux-uclibceabihf
    armv7-unknown-netbsd-eabihf
    armv7-wrs-vxworks-eabihf
    armv7a-kmc-solid_asp3-eabi
    armv7a-kmc-solid_asp3-eabihf
    armv7a-none-eabi
    armv7a-none-eabihf
    armv7k-apple-watchos
    armv7r-none-eabi
    armv7r-none-eabihf
    armv7s-apple-ios
    asmjs-unknown-emscripten
    avr-unknown-gnu-atmega328
    bpfeb-unknown-none
    bpfel-unknown-none
    hexagon-unknown-linux-musl
    i386-apple-ios
    i586-pc-windows-msvc
    i586-unknown-linux-gnu
    i586-unknown-linux-musl
    i686-apple-darwin
    i686-linux-android
    i686-pc-windows-gnu
    i686-pc-windows-msvc
    i686-unknown-freebsd
    i686-unknown-haiku
    i686-unknown-linux-gnu
    i686-unknown-linux-musl
    i686-unknown-netbsd
    i686-unknown-openbsd
    i686-unknown-uefi
    i686-uwp-windows-gnu
    i686-uwp-windows-msvc
    i686-wrs-vxworks
    m68k-unknown-linux-gnu
    mips-unknown-linux-gnu
    mips-unknown-linux-musl
    mips-unknown-linux-uclibc
    mips64-openwrt-linux-musl
    mips64-unknown-linux-gnuabi64
    mips64-unknown-linux-muslabi64
    mips64el-unknown-linux-gnuabi64
    mips64el-unknown-linux-muslabi64
    mipsel-sony-psp
    mipsel-unknown-linux-gnu
    mipsel-unknown-linux-musl
    mipsel-unknown-linux-uclibc
    mipsel-unknown-none
    mipsisa32r6-unknown-linux-gnu
    mipsisa32r6el-unknown-linux-gnu
    mipsisa64r6-unknown-linux-gnuabi64
    mipsisa64r6el-unknown-linux-gnuabi64
    msp430-none-elf
    nvptx64-nvidia-cuda
    powerpc-unknown-freebsd
    powerpc-unknown-linux-gnu
    powerpc-unknown-linux-gnuspe
    powerpc-unknown-linux-musl
    powerpc-unknown-netbsd
    powerpc-unknown-openbsd
    powerpc-wrs-vxworks
    powerpc-wrs-vxworks-spe
    powerpc64-unknown-freebsd
    powerpc64-unknown-linux-gnu
    powerpc64-unknown-linux-musl
    powerpc64-unknown-openbsd
    powerpc64-wrs-vxworks
    powerpc64le-unknown-freebsd
    powerpc64le-unknown-linux-gnu
    powerpc64le-unknown-linux-musl
    riscv32gc-unknown-linux-gnu
    riscv32gc-unknown-linux-musl
    riscv32i-unknown-none-elf
    riscv32im-unknown-none-elf
    riscv32imac-unknown-none-elf
    riscv32imac-unknown-xous-elf
    riscv32imc-esp-espidf
    riscv32imc-unknown-none-elf
    riscv64gc-unknown-freebsd
    riscv64gc-unknown-linux-gnu
    riscv64gc-unknown-linux-musl
    riscv64gc-unknown-none-elf
    riscv64gc-unknown-openbsd
    riscv64imac-unknown-none-elf
    s390x-unknown-linux-gnu
    s390x-unknown-linux-musl
    sparc-unknown-linux-gnu
    sparc64-unknown-linux-gnu
    sparc64-unknown-netbsd
    sparc64-unknown-openbsd
    sparcv9-sun-solaris
    thumbv4t-none-eabi
    thumbv5te-none-eabi
    thumbv6m-none-eabi
    thumbv7a-pc-windows-msvc
    thumbv7a-uwp-windows-msvc
    thumbv7em-none-eabi
    thumbv7em-none-eabihf
    thumbv7m-none-eabi
    thumbv7neon-linux-androideabi
    thumbv7neon-unknown-linux-gnueabihf
    thumbv7neon-unknown-linux-musleabihf
    thumbv8m.base-none-eabi
    thumbv8m.main-none-eabi
    thumbv8m.main-none-eabihf
    wasm32-unknown-emscripten
    wasm32-unknown-unknown
    wasm32-wasi
    wasm64-unknown-unknown
    x86_64-apple-darwin
    x86_64-apple-ios
    x86_64-apple-ios-macabi
    x86_64-apple-tvos
    x86_64-apple-watchos-sim
    x86_64-fortanix-unknown-sgx
    x86_64-fuchsia
    x86_64-linux-android
    x86_64-pc-solaris
    x86_64-pc-windows-gnu
    x86_64-pc-windows-gnullvm
    x86_64-pc-windows-msvc
    x86_64-sun-solaris
    x86_64-unknown-dragonfly
    x86_64-unknown-freebsd
    x86_64-unknown-haiku
    x86_64-unknown-hermit
    x86_64-unknown-illumos
    x86_64-unknown-l4re-uclibc
    x86_64-unknown-linux-gnu
    x86_64-unknown-linux-gnux32
    x86_64-unknown-linux-musl
    x86_64-unknown-netbsd
    x86_64-unknown-none
    x86_64-unknown-none-linuxkernel
    x86_64-unknown-openbsd
    x86_64-unknown-redox
    x86_64-unknown-uefi
    x86_64-uwp-windows-gnu
    x86_64-uwp-windows-msvc
    x86_64-wrs-vxworks
