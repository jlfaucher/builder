#!/bin/bash

if [ "$0" = "$BASH_SOURCE" ] ; then echo "Usage : source ${BASH_SOURCE[0]}" ; exit 1 ; fi

# Those variables must be defined before calling this script
if test -z "$builder_config_dir" ; then echo "builder_config_dir is undefined" ; return 1 ; fi
if test -z "$builder_config" ; then echo "builder_config is undefined" ; return 1 ; fi
if test -z "$builder_shared_dir" ; then echo "builder_shared_dir is undefined" ; return 1 ; fi
if test -z "$builder_system" ; then echo "builder_system is undefined" ; return 1 ; fi
if test -z "$builder_arch" ; then echo "builder_arch is undefined" ; return 1 ; fi

# Associated directory in the build hierarchy
build_dir=$1

# The shared drive provided by vmWare or VirtualBox is TOO SLOW !
# So I put the binary files on a local drive inside the VM.
# The source files remain on the shared drive, I don't want to manage sources per VM.
# The local directory is derived from the delivery directory
export builder_local_dir=`dirname "$build_dir"`

current=${builder_config_dir#$build_dir/}       # <target[.branch]>/d1/d2/.../system-arch/compiler/config

current=`dirname "$current"`                    # <target[.branch]>/d1/d2/.../system-arch/compiler
export builder_compiler=`basename "$current"`

current=`dirname "$current"`                    # <target[.branch]>/d1/d2/.../system-arch
export builder_system_arch=`basename "$current"`

if test "$builder_system_arch" != "${builder_system}-${builder_arch}"
then
    echo "Inconsistency detected:"
    echo "builder_system_arch = $builder_system_arch"
    echo "builder_system = $builder_system"
    echo "builder_arch = $builder_arch"
fi

current=`dirname "$current"`                    # <target[.branch]>/d1/d2/...
export builder_target_branch=${current%%/*}     # executor.<branch> or executor5.<branch> or official
export builder_target=${builder_target_branch%%.*} # executor or executor5 or official (never contains '.')
export builder_branch=${builder_target_branch#*.} # branch (can contain zero or one or several '.')
if test "$builder_target" = "$builder_branch" ; then builder_branch= ; fi

export builder_src_relative_path=${current#*/}  # d1/d2/...

export builder_src_dir=$builder_shared_dir/$builder_target/$builder_src_relative_path

# build & delivery are subdirectories of the config directory.
export builder_build_dir=$builder_config_dir/build
export builder_delivery_dir=$builder_config_dir/delivery

if test ! -d "$builder_build_dir" ; then mkdir "$builder_build_dir" ; fi
if test ! -d "$builder_delivery_dir" ; then mkdir "$builder_delivery_dir" ; fi
