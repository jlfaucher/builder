#!/bin/bash

if [ "$0" = "$BASH_SOURCE" ] ; then echo "Usage : source ${BASH_SOURCE[0]}" ; exit 1 ; fi

# Path to this script
FILE="${BASH_SOURCE[0]}"
export builder_scripts_dir="$( cd -P "$(dirname "$FILE")" && pwd )"

# load the helpers
. $builder_scripts_dir/shellscriptlib

prepend_path PATH "$builder_scripts_dir"

export builder_dir=`dirname "$builder_scripts_dir"`
alias cdbuilder='cd $builder_dir'

dir=$1
if test -z "$dir"
then
    echo Mandatory argument: path to config directory \""build/<target[.branch]>/d1/d2/.../system/compiler/config/bitness"\"
    return 1
fi

if test ! -d "$dir"
then
    while true; do
        read -p "Create directory '$dir' (Y/n)?" input
        case $input in
            [Yy]|"" ) mkdir -p "$dir"; break;;
            [Nn]* ) echo "Abort"; return 1;;
        esac
    done
fi
if test ! -d "$dir"
then
    echo Directory "$dir" not found
    return 1
fi
dir="$( cd -P "$dir" && pwd )"
echo $dir

export builder_config_dir=$dir

# Retrieve system from builder_config_dir
current=$builder_config_dir                     # <target[.branch]>/d1/d2/.../system/compiler/config/bitness
current=`dirname "$current"`                    # <target[.branch]>/d1/d2/.../system/compiler/config
current=`dirname "$current"`                    # <target[.branch]>/d1/d2/.../system/compiler
current=`dirname "$current"`                    # <target[.branch]>/d1/d2/.../system
builder_system=`basename "$current"`

hostname=`hostname -s`

# Iterate over each directory, from deeper to root.
# If a script named setenv-<dir> exists in the directory of scripts then execute it.
# If a script named setenv-<dir> exists in the directory of private scripts then execute it.
while [ "$dir" != "/" ]; do
    current=`basename "$dir"`
    echo "[current="$current"]"
    script=${builder_scripts_dir}/setenv-${current}
    if [ -x "$script" ]; then
        echo Running "$script"
        . "$script" "$dir"
        if test $? != 0
        then
            return 1
        fi
    fi
    # Private script
    script=${builder_scripts_dir}.private/setenv-${current}-${builder_system}-${hostname}
    if [ -x "$script" ]; then
        echo Running "$script"
        . "$script" "$dir"
        if test $? != 0
        then
            return 1
        fi
    fi
    dir=`dirname "$dir"`
done
