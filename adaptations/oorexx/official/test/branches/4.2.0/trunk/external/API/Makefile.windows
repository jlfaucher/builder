#/*----------------------------------------------------------------------------*/
#/*                                                                            */
#/* Copyright (c) 2008 Rexx Language Association. All rights reserved.         */
#/*                                                                            */
#/* This program and the accompanying materials are made available under       */
#/* the terms of the Common Public License v1.0 which accompanies this         */
#/* distribution. A copy is also available at the following address:           */
#/* http://www.oorexx.org/license.html                                         */
#/*                                                                            */
#/* Redistribution and use in source and binary forms, with or                 */
#/* without modification, are permitted provided that the following            */
#/* conditions are met:                                                        */
#/*                                                                            */
#/* Redistributions of source code must retain the above copyright             */
#/* notice, this list of conditions and the following disclaimer.              */
#/* Redistributions in binary form must reproduce the above copyright          */
#/* notice, this list of conditions and the following disclaimer in            */
#/* the documentation and/or other materials provided with the distribution.   */
#/*                                                                            */
#/* Neither the name of Rexx Language Association nor the names                */
#/* of its contributors may be used to endorse or promote products             */
#/* derived from this software without specific prior written permission.      */
#/*                                                                            */
#/* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS        */
#/* "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT          */
#/* LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS          */
#/* FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT   */
#/* OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,      */
#/* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED   */
#/* TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,        */
#/* OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY     */
#/* OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING    */
#/* NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS         */
#/* SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.               */
#/*                                                                            */
#/*----------------------------------------------------------------------------*/


# Setup

# Define some macros so that the compiler and linker can find the API headers
# and libraries.
!IF DEFINED(BUILDER_BUILD_DIR)
API_LIB = $(BUILDER_BUILD_DIR)\api
API_INCLUDE = $(BUILDER_BUILD_DIR)\api
!ELSE IF DEFINED(OOREXX_BUILD_HOME)
API_LIB = $(OOREXX_BUILD_HOME)\Win32Dbg
API_INCLUDE = $(OOREXX_BUILD_HOME)\api
!ELSE IF DEFINED(SRC_DRV) && DEFINED(SRC_DIR)
API_LIB = $(SRC_DRV)$(SRC_DIR)\Win32Dbg
API_INCLUDE = $(SRC_DRV)$(SRC_DIR)\api
!ELSE IF DEFINED(REXX_HOME)
API_LIB = $(REXX_HOME)\api
API_INCLUDE = $(API_LIB)
!ELSE
!ERROR You must define OOREXX_BUILD_HOME, or SRC_DRV and SRC_DIR, or REXX_HOME
!ENDIF

REXX_LIBS = "$(API_LIB)\rexx.lib" "$(API_LIB)\rexxapi.lib"
REXX_INCLUDES = /I"$(API_INCLUDE)" /I"$(API_INCLUDE)\platform\windows"

# May need to add Windows libs - but it doesn't seem like it
LIBS = $(REXX_LIBS)
WARNINGFLAGS = /W3 /Wp64 /D_CRT_SECURE_NO_DEPRECATE /D_CRT_NONSTDC_NO_DEPRECATE

ORXEXELFLAGS = /NOLOGO /DEBUG -debugtype:cv /SUBSYSTEM:Console $(LIBS) user32.lib comdlg32.lib gdi32.lib kernel32.lib
ORXLFLAGS = /NOLOGO /DEBUG -debugtype:cv /SUBSYSTEM:Windows $(LIBS) /DLL

ORXCFLAGS =  /nologo /EHsc /Zi /Od /Gr /MTd /D_CRT_SECURE_NO_DEPRECATE $(WARNINGFLAG) $(REXX_INCLUDES) /c

!IFNDEF OOTEST_BIN_DIR
OOTEST_BIN_DIR = ..\..\bin\WINDOWS
!ENDIF

# Build the libraries
all: $(OOTEST_BIN_DIR)\orxfunction.dll $(OOTEST_BIN_DIR)\orxmethod.dll \
     $(OOTEST_BIN_DIR)\orxclassic.dll $(OOTEST_BIN_DIR)\orxclassic1.dll \
     $(OOTEST_BIN_DIR)\orxexits.dll $(OOTEST_BIN_DIR)\orxinvocation.dll \
     $(OOTEST_BIN_DIR)\rexxinstance.exe

$(OOTEST_BIN_DIR)\orxfunction.dll: orxfunction.dll
  copy orxfunction.dll $(OOTEST_BIN_DIR)

$(OOTEST_BIN_DIR)\orxmethod.dll: orxmethod.dll
  copy orxmethod.dll $(OOTEST_BIN_DIR)

$(OOTEST_BIN_DIR)\orxclassic.dll: orxclassic.dll
  copy orxclassic.dll $(OOTEST_BIN_DIR)

$(OOTEST_BIN_DIR)\orxclassic1.dll: orxclassic1.dll
  copy orxclassic1.dll $(OOTEST_BIN_DIR)

$(OOTEST_BIN_DIR)\orxexits.dll: orxexits.dll
  copy orxexits.dll $(OOTEST_BIN_DIR)

$(OOTEST_BIN_DIR)\orxinvocation.dll: orxinvocation.dll
  copy orxinvocation.dll $(OOTEST_BIN_DIR)

$(OOTEST_BIN_DIR)\rexxinstance.exe: rexxinstance.exe
  copy rexxinstance.exe $(OOTEST_BIN_DIR)


# Build the shared library
orxfunction.dll: orxfunction.obj
	link $(ORXLFLAGS) /def:orxfunction.def orxfunction.obj

# Build the objects
orxfunction.obj: orxfunction.cpp
	cl $(ORXCFLAGS) orxfunction.cpp


# Build the shared library
orxmethod.dll: orxmethod.obj
	link $(ORXLFLAGS) /def:orxmethod.def orxmethod.obj

# Build the objects
orxmethod.obj: orxmethod.cpp
	cl $(ORXCFLAGS) orxmethod.cpp

# Build the objects
orxclassicexits.obj: orxclassicexits.cpp  orxexits.hpp
	cl $(ORXCFLAGS) orxclassicexits.cpp

# Build the objects
orxinstance.obj: orxinstance.cpp  orxexits.hpp
	cl $(ORXCFLAGS) orxinstance.cpp

# Build the objects
orxinvocation.obj: orxinvocation.cpp  orxexits.hpp
	cl $(ORXCFLAGS) orxinvocation.cpp

# Build the objects
orxclassic1.obj: orxclassic1.c
	cl $(ORXCFLAGS) orxclassic1.c

# Build the shared library
orxclassic.dll: orxclassic.obj
	link $(ORXLFLAGS) /def:orxclassic.def orxclassic.obj

# Build the objects
orxclassic.obj: orxclassic.cpp
	cl $(ORXCFLAGS) orxclassic.cpp

# Build the objects
rexxinstance.obj: rexxinstance.cpp orxexits.hpp
	cl $(ORXCFLAGS) rexxinstance.cpp

# Build the shared library
orxclassic1.dll: orxclassic1.obj
	link $(ORXLFLAGS) /def:orxclassic1.def orxclassic1.obj

# Build the shared library
orxexits.dll: orxclassicexits.obj orxinstance.obj
	link $(ORXLFLAGS) /def:orxclassicexits.def orxclassicexits.obj orxinstance.obj

# Build the shared library
orxinvocation.dll: orxinvocation.obj
	link $(ORXLFLAGS) orxclassicexits.lib /def:orxinvocation.def orxinvocation.obj

# Build the .exe file
rexxinstance.exe: rexxinstance.obj
    link $(ORXEXELFLAGS) orxclassicexits.lib rexxinstance.obj -out:$(@B).exe


clean:
	del *.dll *.exe *.obj *.ilk *.pdb *.suo *.lib *.exp $(OOTEST_BIN_DIR)\*.dll 1>nul 2>&1

mostly-clean:
	del *.dll *.exe *.obj *.ilk *.pdb *.suo *.lib *.exp 1>nul 2>&1

