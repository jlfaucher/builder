#!/bin/bash

if [ "$0" = "$BASH_SOURCE" ] ; then echo "Usage : source ${BASH_SOURCE[0]}" ; exit 1 ; fi


# add to front of path
prepend_path()
{
    if eval test -z "\"\$$1\"" || ! eval test -z "\"\${$1##*:$2:*}\"" -o -z "\"\${$1%%*:$2}\"" -o -z "\"\${$1##$2:*}\"" -o -z "\"\${$1##$2}\"" ; then
        eval "$1=$2:\$$1"
    fi
}


declare_java()
{
    if test -z "$JAVA_HOME"
    then
        # MacOs
        JAVA_HOME=`/usr/libexec/java_home 2>/dev/null`
        if test -z "$JAVA_HOME"
        then
            # Ubuntu
            JAVA_HOME=`readlink -f \`which java\``  # .../jre/bin/java
            JAVA_HOME=`dirname "$JAVA_HOME"`        # .../jre/bin
            JAVA_HOME=`dirname "$JAVA_HOME"`        # .../jre
            JAVA_HOME=`dirname "$JAVA_HOME"`        # ...
        fi
        export JAVA_HOME
    fi
    export INCLUDE
    # you need to have a JDK installed, let INCLUDE point to its include directories to be able to resolve "jni.h"
    prepend_path INCLUDE "$JAVA_HOME/include"
    # libjvm.dylib
    # MacOs
    prepend_path DYLD_LIBRARY_PATH "$JAVA_HOME/jre/lib/server"
    # Ubuntu
    prepend_path LD_LIBRARY_PATH "$JAVA_HOME/jre/lib/amd64/server"
}


declare_bsf4oorexx_distribution()
{
    echo "Setting environment for bsf4oorexx"
    export CLASSPATH
    prepend_path CLASSPATH "$BSF4OOREXX_HOME/$BSF4OOREXX_JAR"

    # MacOs & Ubuntu
    export PATH
    prepend_path PATH "$BSF4OOREXX_HOME"

    BSF4OOREXX_LIBRARY_PATH=$BSF4OOREXX_HOME/install/$builder_bitness

    # MacOs
    export DYLD_LIBRARY_PATH
    prepend_path DYLD_LIBRARY_PATH "$BSF4OOREXX_LIBRARY_PATH"

    # Ubuntu
    export LD_LIBRARY_PATH
    prepend_path LD_LIBRARY_PATH "$BSF4OOREXX_LIBRARY_PATH"
}


declare_bsf4oorexx_svn()
{
    echo "Setting environment for bsf4oorexx svn"
    export CLASSPATH
    prepend_path CLASSPATH "$BSF4OOREXX_HOME"
    prepend_path CLASSPATH "$BSF4OOREXX_HOME/jars/janino/commons-compiler.jar"
    prepend_path CLASSPATH "$BSF4OOREXX_HOME/jars/janino/janino.jar"

    # MacOs & Ubuntu
    export PATH
    prepend_path PATH "$BSF4OOREXX_HOME/bsf4oorexx.dev/bin"

    BSF4OOREXX_LIBRARY_PATH=$BSF4OOREXX_HOME/bsf4oorexx.dev/source_cc/build/$builder_system/$builder_compiler/$builder_config/$builder_bitness

    # MacOs
    export DYLD_LIBRARY_PATH
    prepend_path DYLD_LIBRARY_PATH "$BSF4OOREXX_LIBRARY_PATH"

    # Ubuntu
    export LD_LIBRARY_PATH
    prepend_path LD_LIBRARY_PATH "$BSF4OOREXX_LIBRARY_PATH"

    # To avoid these errors when using rexxj2.sh under MacOS:
    # error1
    #     [BSFManager.loadScriptingEngine()] unable to load language: rexx: java.lang.UnsatisfiedLinkError: no BSF4ooRexx in java.library.path
    # error2
    #     SEVERE: [BSFManager] Exception :
    #     java.lang.UnsatisfiedLinkError: /local/rexx/bsf4oorexx/svn/trunk/bsf4oorexx.dev/source_cc/build/macos/clang/debug/64/libBSF4ooRexx.dylib: dlopen(/local/rexx/bsf4oorexx/svn/trunk/bsf4oorexx.dev/source_cc/build/macos/clang/debug/64/libBSF4ooRexx.dylib, 1): Library not loaded: @rpath/librexx.5.0.0.dylib
    #     Referenced from: /local/rexx/bsf4oorexx/svn/trunk/bsf4oorexx.dev/source_cc/build/macos/clang/debug/64/libBSF4ooRexx.dylib
    #     Reason: image not found
    export BSF4Rexx_JavaStartupOptions
    BSF4Rexx_JavaStartupOptions="-Djava.library.path=$builder_delivery_dir/lib:$BSF4OOREXX_LIBRARY_PATH"
}


declare_gci_rebuilt()
{
    GCI_LIBRARY_PATH=$GCI_HOME/build/$builder_system/$builder_compiler/$builder_config/$builder_bitness

    # MacOs
    export DYLD_LIBRARY_PATH
    prepend_path DYLD_LIBRARY_PATH "$GCI_LIBRARY_PATH"

    # Ubuntu
    export LD_LIBRARY_PATH
    prepend_path LD_LIBRARY_PATH "$GCI_LIBRARY_PATH"
}


declare_java

export BSF4OOREXX_HOME=/local/rexx/bsf4oorexx/BSF4ooRexx_install_v641-20191126-beta/bsf4oorexx
export BSF4OOREXX_JAR=bsf4ooRexx-v641-20191126-bin.jar
declare_bsf4oorexx_distribution

#export BSF4OOREXX_HOME=/Local/rexx/bsf4oorexx/svn/trunk
#declare_bsf4oorexx_svn

echo "Setting environment for GCI"
export GCI_HOME=/Local/rexx/GCI/gci-source.1.1
declare_gci_rebuilt

echo "Setting environment for ICU"
. /local/icu/setenv.sh

echo "Setting environment for Dropbox scripts"
prepend_path PATH "~/Dropbox/software/oorexx"
