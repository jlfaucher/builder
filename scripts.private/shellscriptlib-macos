################################################################################
#
# Library of shell-script procedures for MacOs
#
################################################################################

declare_java()
{
    if test -z "$JAVA_HOME"
    then
        JAVA_HOME=`/usr/libexec/java_home 2>/dev/null`
        export JAVA_HOME
    fi
    export INCLUDE
    # you need to have a JDK installed, let INCLUDE point to its include directories to be able to resolve "jni.h"
    prepend_path INCLUDE "$JAVA_HOME/include"
    # libjvm.dylib
    local JVMDIR
    JVMDIR="$JAVA_HOME/jre/lib/server"; if test -f "$JVMDIR/libjvm.dylib"; then prepend_path DYLD_LIBRARY_PATH "$JVMDIR"; fi    # legacy
    JVMDIR="$JAVA_HOME/lib/server"; if test -f "JVMDIR/libjvm.dylib"; then prepend_path DYLD_LIBRARY_PATH "$JVMDIR"; fi          # from openjdk 11
}
# MacOs 10.13
# JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home


declare_bsf4oorexx_distribution()
{
    echo "Setting environment for bsf4oorexx"
    export CLASSPATH
    if [ -f "$BSF4OOREXX_HOME/$BSF4OOREXX_JAR" ]; then prepend_path CLASSPATH "$BSF4OOREXX_HOME/$BSF4OOREXX_JAR"; fi
    if [ -f "$BSF4OOREXX_HOME/lib/$BSF4OOREXX_JAR" ]; then prepend_path CLASSPATH "$BSF4OOREXX_HOME/lib/$BSF4OOREXX_JAR"; fi
    if [ -f "$BSF4OOREXX_HOME/jars/$BSF4OOREXX_JAR" ]; then prepend_path CLASSPATH "$BSF4OOREXX_HOME/jars/$BSF4OOREXX_JAR"; fi

    export PATH
    prepend_path PATH "$BSF4OOREXX_HOME"
    if [ -d "$BSF4OOREXX_HOME/bin" ]; then prepend_path PATH "$BSF4OOREXX_HOME/bin"; fi

    BSF4OOREXX_LIBRARY_PATH=""
    if [ -d "$BSF4OOREXX_HOME/lib/$builder_system_arch" ]; then prepend_path BSF4OOREXX_LIBRARY_PATH "$BSF4OOREXX_HOME/lib/$builder_system_arch"; fi
    if [ -d "$BSF4OOREXX_HOME/lib" ]; then prepend_path BSF4OOREXX_LIBRARY_PATH "$BSF4OOREXX_HOME/lib"; fi

    export DYLD_LIBRARY_PATH
    prepend_path DYLD_LIBRARY_PATH "$BSF4OOREXX_LIBRARY_PATH"

    # Needed from v641-20210715-beta
    export JAVA_LIBRARY_PATH
    prepend_path JAVA_LIBRARY_PATH "$builder_delivery_dir/lib:$BSF4OOREXX_LIBRARY_PATH"
    export BSF4Rexx_JavaStartupOptions
    BSF4Rexx_JavaStartupOptions="-Djava.library.path=$JAVA_LIBRARY_PATH"

    alias cdbsf='cd $BSF4OOREXX_HOME'
    alias cdbsf4oorexx='cd $BSF4OOREXX_HOME'
}


declare_bsf4oorexx_svn()
{
    echo "Setting environment for bsf4oorexx svn"
    export CLASSPATH
    prepend_path CLASSPATH "$BSF4OOREXX_HOME"
    prepend_path CLASSPATH "$BSF4OOREXX_HOME/jars/janino/commons-compiler.jar"
    prepend_path CLASSPATH "$BSF4OOREXX_HOME/jars/janino/janino.jar"

    export PATH
    prepend_path PATH "$BSF4OOREXX_HOME/bsf4oorexx.dev/bin"

    BSF4OOREXX_LIBRARY_PATH=$BSF4OOREXX_HOME/bsf4oorexx.dev/source_cc/build/$builder_system_arch/$builder_compiler/$builder_config

    export DYLD_LIBRARY_PATH
    prepend_path DYLD_LIBRARY_PATH "$BSF4OOREXX_LIBRARY_PATH"

    # To avoid these errors when using rexxj2.sh under MacOS:
    # error1
    #     [BSFManager.loadScriptingEngine()] unable to load language: rexx: java.lang.UnsatisfiedLinkError: no BSF4ooRexx in java.library.path
    # error2
    #     SEVERE: [BSFManager] Exception :
    #     java.lang.UnsatisfiedLinkError: /local/rexx/bsf4oorexx/svn/trunk/bsf4oorexx.dev/source_cc/build/macos/clang/debug/64/libBSF4ooRexx.dylib: dlopen(/local/rexx/bsf4oorexx/svn/trunk/bsf4oorexx.dev/source_cc/build/macos/clang/debug/64/libBSF4ooRexx.dylib, 1): Library not loaded: @rpath/librexx.5.0.0.dylib
    #     Referenced from: /local/rexx/bsf4oorexx/svn/trunk/bsf4oorexx.dev/source_cc/build/macos/clang/debug/64/libBSF4ooRexx.dylib
    #     Reason: image not found
    export JAVA_LIBRARY_PATH
    prepend JAVA_LIBRARY_PATH "$builder_delivery_dir/lib:$BSF4OOREXX_LIBRARY_PATH"
    export BSF4Rexx_JavaStartupOptions
    BSF4Rexx_JavaStartupOptions="-Djava.library.path=$JAVA_LIBRARY_PATH"

    alias cdbsf='cd $BSF4OOREXX_HOME'
    alias cdbsf4oorexx='cd $BSF4OOREXX_HOME'
}
